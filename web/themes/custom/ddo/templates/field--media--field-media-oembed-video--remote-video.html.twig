{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
  'field',
  'field--name-' ~ field_name|clean_class,
  'field--type-' ~ field_type|clean_class,
  'field--label-' ~ label_display,
]
%}
{%
  set title_classes = [
  'field__label',
  label_display == 'visually_hidden' ? 'visually-hidden',
]
%}

<div{{ attributes.addClass(classes, 'field__items') }}>
  {% for item in items %}
    <div style="border: 1px solid #cccccc; background-color: whitesmoke; color: #F74E2D;" {{ item.attributes.addClass('field__item') }}>
      <!-- Gestion des cookies Axeptio.
      On n'agit que si la gestion des cookies est activée
      Par défaut, le module ddo_axeptio est configuré avec la gestion des cookies activée.
      On peut la désactiver localement dans settings.local.php
      en passant la variable $config['ddo_axeptio.settings']['cookies_control'] à FALSE. -->
      {% if drupal_config('ddo_axeptio.settings', 'cookies_control') %}
        <!-- Détermination du fournisseur vidéo -->
        {% if 'youtu.be' in item.content['#attributes']['src'] %}
          {% set vendor = 'Youtube' %}
        {% elseif 'vimeo.com' in item.content['#attributes']['src'] %}
          {% set vendor = 'Vimeo' %}
        {% endif %}

        <!-- Bouton d'acceptation des cookies vidéo -->
        <div data-hide-on-vendor-consent="{{ vendor }}">
          <button style="border: 1px solid; margin-top: 1em; margin-left: 1em; font-size: 85%;" onclick="window.axeptioSDK.requestConsent('{{ vendor }}')">
            Pour voir cette vidéo, cliquez ici pour accepter les cookies {{ vendor }}
          </button>
        </div>
      {% endif %}
      <!-- Fin de Gestion des cookies Axeptio -->

      <!-- Code Drupal générant l'iframe video -->
      {{ item.content }}
    </div>
  {% endfor %}
</div>



